name: Release Go Binary

on:
  release:
    types: [created]

jobs:
  build-and-release:
    name: Build and Release Go Binary
    runs-on: ubuntu-latest
    container: golang:1.21-alpine
    permissions:
      contents: read # To checkout the repository
      # GITHUB_TOKEN has implicit write access to the release that triggered the workflow for uploading assets.

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Cache Go modules and build cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Install build dependencies
        run: |
          apk add --no-cache gcc musl-dev libpcap-dev

      - name: Run Go Tests
        run: go test ./...

      - name: Build static binary for Linux
        env:
          CGO_ENABLED: "1"
          GOOS: "linux"
          GOARCH: "amd64"
        run: |
          go build -v -a -tags netgo -ldflags '-w -s -extldflags "-static"' -o sip_call_extractor .

      - name: Upload Release Asset (Linux AMD64)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./sip_call_extractor
          asset_name: sip_call_extractor-linux-amd64
          asset_content_type: application/octet-stream